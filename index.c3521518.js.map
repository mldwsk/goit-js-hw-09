{"mappings":"AAAA,MAAMA,EAAcC,SAASC,cAAc,iBAErCC,GADcF,SAASC,cAAc,iBACzBD,SAASG,eAAe,eAC1C,IAAIC,EAAkB,GAEtBF,EAAUG,iBAAiB,SAASC,UAClC,IACEF,EAAkB,IAwBtB,SAAgCG,GAC9B,GAAGA,EAAUC,OAAO,GAAI,CACtB,MAAMC,EAAS,6EACfV,EAAYW,UAAYD,C,MAErB,GAAGF,EAAUC,QAAQ,GAAGD,EAAUC,QAAQ,GAAI,CACjD,MAAMC,EAASF,EACdI,KACEC,GAAc,wCACDA,EAAUC,MAAMC,gCAAgCF,EAAUG,KAAKC,0BAG9EC,KAAK,IACNlB,EAAYW,UAAYD,C,MACnB,GAAwB,IAArBF,EAAUC,OAAc,CAChC,MAAMC,EAASF,EACdI,KACEC,GAAc,wCACDA,EAAUC,MAAMC,gCAAgCF,EAAUG,KAAKC,0BAG9EC,KAAK,IACNlB,EAAYW,UAAYD,C,KACnB,CACL,MAAMA,EAAS,wFACfV,EAAYW,UAAYD,C,EA/CxBS,OAMJZ,eAA8Ba,GAC5B,MAAMC,EAAU,4CACWC,MAAM,GAAGD,KAAWD,EAAUG,yDACxDC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,IAAI,IAAIC,EAAI,EAAGA,EAAED,EAAKlB,OAAQmB,IACxBvB,EAAgBwB,SAASF,EAAKC,KAChCvB,EAAgByB,KAAKH,EAAKC,GAAG,IAIlCG,OAAMC,GAASC,QAAQC,IAAIF,KAE5B,OAAO3B,C,CApBuB8B,CAAehC,EAAUiC,O,CAErD,MAAOJ,GACPC,QAAQC,IAAIF,EAAMK,Q","sources":["src/index.js"],"sourcesContent":["const countryList = document.querySelector(\".country-list\");\nconst countryInfo = document.querySelector(\".country-info\");\nconst inputArea = document.getElementById(\"search-box\");\nlet infoOnCountries = [];\n\ninputArea.addEventListener(\"input\", async () => {\n  try {\n    infoOnCountries = [];\n    const countriesList = await fetchCountries(inputArea.value);\n    rendercountryListItems(countriesList);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nasync function fetchCountries(userInput) {\n  const baseUrl = \"https://restcountries.com/v3.1/name\";\n  let countryInfoObj = await fetch(`${baseUrl}/${userInput.trim()}?fields=name,capital,population,flags,languages`) \n  .then(response => response.json())\n  .then(data => {\n    for(let i = 0; i<data.length; i++) {\n      if(!infoOnCountries.includes(data[i])) {\n        infoOnCountries.push(data[i]);\n      }\n    };\n  })\n  .catch(error => console.log(error));\n  \n  return infoOnCountries;\n}\n\nfunction rendercountryListItems(countries) {\n  if(countries.length>10) {\n    const markup = `<li class=\"item\"><p>Too many countries. Please, be more specific.</p></li>`\n    countryList.innerHTML = markup;\n  }\n  else if(countries.length>=2&&countries.length<=10) {\n    const markup = countries\n    .map(\n      (countries) => `<li class=\"item\">\n        <img src=\"${countries.flags.svg}\" width=\"40\" height=\"40\"> ${countries.name.official}\n      </li>`\n    )\n    .join(\"\");\n    countryList.innerHTML = markup;\n  } else if(countries.length === 1) {\n    const markup = countries\n    .map(\n      (countries) => `<li class=\"item\">\n        <img src=\"${countries.flags.svg}\" width=\"40\" height=\"40\"> ${countries.name.official}\n      </li>`\n    )\n    .join(\"\");\n    countryList.innerHTML = markup;\n  } else {\n    const markup = `<li class=\"item\"><p>Ooops. Looks like there are no countries with that name.</p></li>`\n    countryList.innerHTML = markup;\n  }\n}"],"names":["$1f0dc3b9307be026$var$countryList","document","querySelector","$1f0dc3b9307be026$var$inputArea","getElementById","$1f0dc3b9307be026$var$infoOnCountries","addEventListener","async","countries1","length","markup","innerHTML","map","countries","flags","svg","name","official","join","$1f0dc3b9307be026$var$rendercountryListItems","userInput","baseUrl","fetch","trim","then","response","json","data","i","includes","push","catch","error","console","log","$1f0dc3b9307be026$var$fetchCountries","value","message"],"version":3,"file":"index.c3521518.js.map"}